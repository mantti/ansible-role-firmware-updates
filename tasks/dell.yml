---

- name: Check current iDRAC version
  tags: idrac,debug
  script: files/check_idrac_version.sh
  register: idrac_version

- debug: 
    msg: 
      - "iDRAC Firmware-version: {{ idrac_version.stdout | regex_replace ('^(.*)\\r\\n$', '\\1') }}"
      - "iDRAC newest Firmware-version: {{ idrac_newest_version[ansible_product_name] }}"
  tags: idrac,debug

- name: Copy new idrac FW to /tmp
  tags: idrac
  copy: src=Dell/{{ idrac_newest_name[ansible_product_name] }} mode=0755 dest=/tmp
  register: idrac_update_needed
  when: idrac_version.stdout is version_compare ( 'idrac_newest_version[ansible_product_name]', '<' )
  notify: Remove temporary idrac update file

- name: Install iDRAC FW update
  tags: idrac
  shell: /tmp/{{ idrac_newest_name[ansible_product_name] }} -q
  register: idrac_updated
  when: idrac_update_needed.changed
  changed_when: idrac_updated.rc == 0 

- debug: 
    msg:
     - "Ansible bios-version {{ ansible_bios_version }}"
     - "Newest bios-version {{ bios_newest_version[ansible_product_name] }}"
  tags: bios,debug

- name: Copy new BIOS update to /tmp
  tags: bios
  copy: src=Dell/{{ bios_newest_name[ansible_product_name] }} mode=0755 dest=/tmp
  register: update_needed
  when: ( ansible_bios_version != bios_newest_version[ansible_product_name] )
  notify: Remove temporary bios update file

- name: Install BIOS update
  tags: bios
  shell: /tmp/{{ bios_newest_name[ansible_product_name] }} -q
  register: bios_updated
  when: update_needed.changed
  failed_when: > 
    bios_updated.rc != 2 and ("same as the currently installed" not in bios_updated.stdout)
  changed_when: bios_updated.rc == 2 
# These are mostly servers, so we just can't request shutdown from slurm
  notify: Request Reboot
  
